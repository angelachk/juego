{"version":3,"sources":["components/Header.js","components/Fichas.js","components/Celdas.js","components/Row.js","components/Cuadricula.js","components/Tablero.js","App.js","serviceWorker.js","index.js"],"names":["Header","useTranslation","t","i18n","className","onClick","changeLanguage","Fichas","cell","color","style","backgroundColor","Celdas","row","col","onClickHandler","Row","props","cells","i","push","key","display","Cuadricula","console","log","rows","Tablero","tablero","state","temp","slice","empate","setState","tie","winner","emptyRow","rowWhereCoinBeAdded","player","verGanador","length","y","restartGame","Array","fill","verificaFichasEjeX","value","verificaFichasEjeY","verificaFichasDiagonal","this","rR","cR","rL","cL","status","Component","withTranslation","App","Boolean","window","location","hostname","match","i18next","init","interpolation","escapeValue","lng","resources","es","global","global_es","en","global_en","ReactDOM","render","StrictMode","I18nextProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.323b6123.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n/**\r\n * Componente funcional Header:\r\n *\r\n * @param {t, i18n} ----Recibe los parametros necesariospara usar los metodos de react-i18next\r\n *\r\n * @returns {<div>} Retorna el div con un Header de texto ajustable según el idioma y los botones para cambiar de Idioma de inglés a Español\r\n */\r\n\r\nfunction Header() {\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  return (\r\n    <div>\r\n          <h1 className=\"App-title\">{t(\"header.letsplay\")} </h1>\r\n          <br />\r\n          <br />\r\n          <button className=\"botonIdioma\" onClick={() => i18n.changeLanguage(\"es\")}>ES </button>\r\n          <button className=\"botonIdioma\" onClick={() => i18n.changeLanguage(\"en\")}>EN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Componente funcional Fichas:\r\n *\r\n * @param {cell} celdas - Contiene el numero de jugador en turno que identifica siguiente celda a colorear\r\n *\r\n * @returns {<div>} Retorna el div de clase fichas con un estilo diferente segun la celda\r\n *                  El estilo se torna de color amarillo para jugador 1 y amarillo para el jugador 2\r\n */\r\n\r\nconst Fichas = ({ cell }) => {\r\n  let color = \"#fff\";\r\n  if (cell === 1) {\r\n    color = \"red\";\r\n  } else if (cell === 2) {\r\n    color = \"yellow\";\r\n  }\r\n\r\n  var style = {\r\n    backgroundColor: color\r\n  };\r\n\r\n  return <div className=\"fichas\" style={style} />;\r\n};\r\n\r\nexport default Fichas;\r\n","import React from \"react\";\r\nimport Fichas from \"./Fichas\";\r\n\r\nconst Celdas = ({ row, col, cell, onClickHandler }) => {\r\n  return (\r\n    <div className=\"fondoTablero\" onClick={() => onClickHandler(row, col)}>\r\n      <Fichas cell={cell} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Celdas;\r\n","import  React  from  'react';\r\nimport Celdas from './Celdas';\r\n\r\nconst Row = props => {\r\n  let style = {\r\n    display: \"flex\"\r\n  };\r\n\r\n  let cells = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    cells.push(\r\n      <Celdas\r\n        key={i}\r\n        cell={props.cells[i]}\r\n        row={props.row}\r\n        col={i}\r\n        onClickHandler={props.onClickHandler}\r\n      />\r\n    );\r\n  }\r\n  return <div style={style}> {cells} </div>;\r\n};\r\n\r\nexport default Row;\r\n","import  React  from  'react';\r\nimport  Row  from  './Row';\r\n\r\n//Permite armar la cuadricula dentro de tablero con todas las filas y columnas\r\n\r\n\r\nconst Cuadricula = props => {\r\n  console.log(props);\r\n  let rows = [];\r\n  for (let i = 5; i >= 0; i--) {\r\n    rows.push(\r\n      <Row\r\n        key={i}\r\n        row={i}\r\n        cells={props.cells[i]}\r\n        onClickHandler={props.onClickHandler}\r\n      />\r\n    );\r\n  }\r\n  return <div>{rows}</div>;\r\n};\r\n\r\nexport default Cuadricula;\r\n","import React, { Component } from \"react\";\r\nimport Cuadricula from \"./Cuadricula\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass Tablero extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let cells = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      cells.push(new Array(7).fill(0));\r\n    }\r\n    this.state = {\r\n      cells: cells,\r\n      player: false,\r\n      winner: 0,\r\n      tie: false\r\n    };\r\n  }\r\n\r\n\r\n  onClickHandler = (row, col) => {\r\n    let tablero = this.state.cells;\r\n    let temp = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      temp.push(tablero[i].slice());\r\n    }\r\n    let tie = this.empate(tablero);\r\n    if (tie) {\r\n      console.log(\"tie\");\r\n      this.setState({\r\n        tie: true\r\n      });\r\n    }\r\n    if (this.state.winner) return;\r\n    console.log(\"temp is\" + temp);\r\n    let emptyRow = this.rowWhereCoinBeAdded(col);\r\n    console.log(emptyRow);\r\n    temp[emptyRow][col] = this.state.player ? 1 : 2;\r\n    this.setState(\r\n      {\r\n        cells: temp,\r\n        player: !this.state.player\r\n      },\r\n      () => {\r\n        if (this.verGanador(emptyRow, col) > 0) {\r\n          console.log(\"winner\");\r\n          this.setState({\r\n            winner: this.state.player ? 2 : 1\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n  rowWhereCoinBeAdded = col => {\r\n    for (let i = 0; i < 6; i++) {\r\n      if (this.state.cells[i][col] === 0) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  empate = tablero => {\r\n    for (let i = 0; i < tablero.length; i++) {\r\n      for (let y = 0; y < tablero[i].length; y++) {\r\n        if (tablero[i][y] === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  restartGame = () => {\r\n    var cells = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      cells.push(new Array(7).fill(0));\r\n    }\r\n    this.setState({\r\n      cells: cells,\r\n      tie: false,\r\n      player: false,\r\n      winner: 0\r\n    });\r\n  };\r\n\r\n  verificaFichasEjeX = (row, col) => {\r\n    let cells = this.state.cells;\r\n    let i = 6;\r\n    let value = this.state.player ? 2 : 1;\r\n\r\n    while (i >= 3) {\r\n      if (\r\n        cells[row][i] === value &&\r\n        cells[row][i - 1] === value &&\r\n        cells[row][i - 2] === value &&\r\n        cells[row][i - 3] === value\r\n      ) {\r\n        return 1;\r\n      }\r\n      i--;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  verificaFichasEjeY = (row, col) => {\r\n    let cells = this.state.cells;\r\n    let value = this.state.player ? 2 : 1;\r\n    if (row >= 3) {\r\n      if (\r\n        cells[row][col] === value &&\r\n        cells[row - 1][col] === value &&\r\n        cells[row - 2][col] === value &&\r\n        cells[row - 3][col] === value\r\n      ) {\r\n        return 1;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  verGanador = (row, col) => {\r\n    return (\r\n      this.verificaFichasDiagonal(row, col) || this.verificaFichasEjeX(row, col) || this.verificaFichasEjeY(row, col)\r\n\r\n    );\r\n  };\r\n\r\n  verificaFichasDiagonal(row, col) {\r\n    var cells = this.state.cells;\r\n    var value = this.state.player ? 2 : 1;\r\n    var rR = row;\r\n    var cR = col;\r\n    while (rR < 5 && cR < 6) {\r\n      rR++;\r\n      cR++;\r\n    }\r\n    while (rR >= 3 && cR >= 3) {\r\n      if (\r\n        cells[rR][cR] === value &&\r\n        cells[rR - 1][cR - 1] === value &&\r\n        cells[rR - 2][cR - 2] === value &&\r\n        cells[rR - 3][cR - 3] === value\r\n      ) {\r\n        return 1;\r\n      }\r\n      rR--;\r\n      cR--;\r\n    }\r\n\r\n    var rL = row;\r\n    var cL = col;\r\n\r\n    while (rL < 5 && cL > 0) {\r\n      rL++;\r\n      cL--;\r\n    }\r\n\r\n    while (rL >= 3 && cL <= 3) {\r\n      if (\r\n        cells[rL][cL] === value &&\r\n        cells[rL - 1][cL + 1] === value &&\r\n        cells[rL - 2][cL + 2] === value &&\r\n        cells[rL - 3][cL + 3] === value\r\n      ) {\r\n        return 1;\r\n      }\r\n      rL--;\r\n      cL++;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n\r\n    let status = \"\";\r\n    if (this.state.winner > 0) {\r\n      if (this.state.winner === 1) {\r\n        status = <p>{this.props.t('ganador2.gano2')}</p>;\r\n      } else {\r\n        status = <p>{this.props.t('ganador1.gano1')}</p>;\r\n      }\r\n    } else if (this.state.player) {\r\n      status = <p>{this.props.t('turno2.display2')}</p>;\r\n    } else if (!this.state.winner && this.state.tie) {\r\n      status = <p>Its a Tie</p>;\r\n    } else {\r\n      status = <p> {this.props.t('turno1.display1')}</p>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"status\">{status}</p>\r\n        <Cuadricula\r\n          cells={this.state.cells}\r\n          onClickHandler={this.onClickHandler}\r\n        />\r\n          <button className=\"reiniciaJuego\" onClick={() => this.restartGame()}>\r\n            {this.props.t('button.restartGame')}\r\n         </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation('global')(Tablero);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Tablero from './components/Tablero';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n        </header>\n        <div className=\"main-board\">\n          <Tablero />\n        </div>\n      </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { I18nextProvider } from 'react-i18next';\nimport i18next from 'i18next';\nimport global_es from './translations/es/global.json';\nimport global_en from './translations/en/global.json';\n\ni18next.init({\n  interpolation: { escapeValue :false },\n  lng:\"es\",\n  resources:{\n    es:{\n      global:global_es,\n    },\n    en:{\n      global:global_en,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n  <I18nextProvider i18n={i18next}>\n    <App />\n  </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}